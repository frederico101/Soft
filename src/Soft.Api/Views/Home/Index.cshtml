@model IEnumerable<Soft.Api.ViewModel.BookViewModel>

@{
    ViewBag.Title = "Index";
}
<link href="https://cdn.datatables.net/1.10.16/css/jquery.dataTables.min.css" rel="stylesheet" />

@section Styles {
    <style>
        .create_container {
            display: flex;
            justify-content: space-between;
            align-items: center;
            flex-direction: row;
            padding: 20px;
            border-radius: 5px;
            color: white;
            margin-bottom: 5px;
        }

        .create_header {
           
        }
    </style>
}


<h2>Index</h2>
<div class="create_container">
    <div class="create_header">
   
        @Html.ActionLink("Create New", "CreateBook",null ,new { @class = "btn btn-secondary" })
  

 
        @Html.ActionLink("Logout", "Logout", "Login", null, new { @class = "btn btn-secondary" })
   
        </div>
</div>

<table id="booksTable" class="table display">
    <thead>
        <tr>
            <th>@Html.DisplayNameFor(model => model.Title)</th>
            <th>@Html.DisplayNameFor(model => model.Author)</th>
            <th>@Html.DisplayNameFor(model => model.Category)</th>
            <th>@Html.DisplayNameFor(model => model.IsRented)</th>
            <th>@Html.DisplayNameFor(model => model.CreatedAt)</th>
            <th>@Html.DisplayNameFor(model => model.UpdatedAt)</th>
            <th>@Html.DisplayNameFor(model => model.Status)</th>
            <th>@Html.DisplayNameFor(model => model.CoverPath)</th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var item in Model)
        {
            <tr>
                <td>@Html.DisplayFor(modelItem => item.Title)</td>
                <td>@Html.DisplayFor(modelItem => item.Author)</td>
                <td>@Html.DisplayFor(modelItem => item.Category)</td>
                <td>@Html.DisplayFor(modelItem => item.IsRented)</td>
                <td>@Html.DisplayFor(modelItem => item.CreatedAt)</td>
                <td>@Html.DisplayFor(modelItem => item.UpdatedAt)</td>
                <td>@Html.DisplayFor(modelItem => item.Status)</td>
                <td>
                    <!-- Render the image -->
                    <img src="@item.CoverPath" alt="Book Cover" style="max-width: 100px; max-height: 150px;" />
                </td>
               
                <td>
                    <div class="d-flex justify-content-center align-items-center">
                        <a href="@Url.Action("rentBook", new { id = item.Id })" class="btn btn-secondary rent-btn" data-is-rented="@item.IsRented">
                            Rent
                        </a>|
                        @Html.ActionLink("Edit", "EditBook", new { id = item.Id }, new { @class = "btn btn-secondary" }) |
                        @Html.ActionLink("Details", "Detail", new { id = item.Id }, new { @class = "btn btn-primary" }) |
                        @Html.ActionLink("Delete", "DeleteBookQuestion", new { id = item.Id }, new { @class = "btn btn-danger" })
                    </div>
                </td>
            </tr>
        }
    </tbody>
</table>

<!-- Include jQuery and DataTables.js -->
@*<script src="~/Content/dataTables.bootstrap.min.css"></script>
    <script src="~/Content/dataTables.min.css"></script>*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")

    <script src="https://cdn.datatables.net/1.10.16/js/jquery.dataTables.min.js"></script>
    <script>
        $(document).ready(function () {
            $('#booksTable').DataTable({
                "paging": true,
                "searching": true,
                "ordering": true,
                "info": true
            });



            document.addEventListener('DOMContentLoaded', function () {
                // Select all rent buttons
                const rentButtons = document.querySelectorAll('.rent-btn');

                // Iterate over each rent button
                rentButtons.forEach(button => {
                    // Get the is-rented status from the data attribute
                    const isRented = button.getAttribute('data-is-rented') === 'True';

                    // Disable the button if the item is rented
                    if (isRented) {
                        button.classList.add('disabled');
                        button.style.pointerEvents = 'none'; // Optional: prevent clicks
                        button.setAttribute('aria-disabled', 'true'); // Optional: accessibility
                    }
                });
            });


        });
    </script>
}